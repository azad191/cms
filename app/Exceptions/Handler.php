<?php

namespace App\Exceptions;

<<<<<<< HEAD
=======
use Illuminate\Auth\AuthenticationException;
>>>>>>> 8b71f0b5417b4f2e43fb2edfdbb8267735cb2016
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
<<<<<<< HEAD
=======
    protected function unauthenticated($request, AuthenticationException $exception)
    {
       // return parent::unauthenticated($request, $exception); // TODO: Change the autogenerated stub

        if ($request->is('freelancer') || $request->is('freelancer/*')) {
            return redirect()->guest('/user/registration');
        }
        if ($request->is('buyer') || $request->is('buyer/*')) {
            return redirect()->guest('/user/registration');
        }
        if ($request->is('login') || $request->is('admin/*')) {
            return redirect()->guest('/login');
        }
//        if ($request->is('writer') || $request->is('writer/*')) {
//            return redirect()->guest('/login/writer');
//        }
    }
>>>>>>> 8b71f0b5417b4f2e43fb2edfdbb8267735cb2016
}
